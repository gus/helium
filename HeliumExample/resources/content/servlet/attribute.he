<article>
  <include article="html.he">
    <var name="html.title" value="Servlet: Attribute"/>
    <var name="html.body">
      <div id="info">
        <p>Servlet attributes that are normally obtained via <i>ServletRequest.getAttribute()</i>
        and defined via <i>ServletRequest.setAttribute()</i> are now
        accessible and assignable via the Attribute action. This
        action is provided only by the Helium Servlet for use in the
        context of a Servlet engine.</p>

        <p>Assignment is triggered in the following ways, the first having
        the highest precedence:</p>
        <ol>
          <li>Via an attribute (valueOf) whose name is provided in the XML element.</li>
          <li>Via a Var (valueOfVar) whose name is provided in the XML element.</li>
          <li>Using any child content for the XML element as the value.</li>
          <li>Via text of an attribute (value) provided in the XML element.</li>
        </ol>
      </div>

      <!-- Example 1 -->
      <h3>Example 1: Setting an attribute using <i>value</i></h3>

      <include article="example-output.he">
        <var name="example.index" value="1"/>
        <var name="example.message">Setting myAttribute</var>
        <var name="example.text"><![CDATA[
  &lt;article&gt;
    &lt;attribute name=&quot;myAttribute&quot
      value=&quot;hello, world&quot/&gt;
    &lt;attribute name=&quot;myAttribute&quot/&gt;
  &lt;/article&gt;]]></var>
        <var name="example.output">hello, world</var>
      </include>

      <!-- Example 2 -->
      <h3>Example 2: Copying an attribute with <i>valueOf</i></h3>

      <include article="example-output.he">
        <var name="example.index" value="2"/>
        <var name="example.message">Copying to myAttribute</var>
        <var name="example.text"><![CDATA[
  &lt;article&gt;
    &lt;attribute name=&quot;inAttribute&quot value=&quot;hello, world&quot/&gt;
    &lt;attribute name=&quot;myAttribute&quot valueOf=&quot;inAttribute&quot/&gt;
    &lt;attribute name=&quot;myAttribute&quot/&gt;
  &lt;/article&gt;]]></var>
        <var name="example.output">hello, world</var>
      </include>

      <!-- Example 3 -->
      <h3>Example 3: Setting an attribute using child content</h3>

      <include article="example-output.he">
        <var name="example.index" value="3"/>
        <var name="example.message">Setting myAttribute</var>
        <var name="example.text"><![CDATA[
  &lt;article&gt;
    &lt;attribute name=&quot;myAttribute&quot&gt;
      hello, world
    &lt;/attribute&gt;
  &lt;/article&gt;]]></var>
        <var name="example.output">hello, world</var>
      </include>

      <!-- Example 4 -->
      <h3>Example 4: Retrieving an attribute</h3>

      <p>To see how attributes work, enter a value in the field below. The name
      of this field is <i>myAttribute</i>. The example code shows how to
      retrieve an attribute value and the example output will actually retrieve
      the value you provide.</p>

      <form action="attribute.he" method="get">
        <input type="text" name="myAttribute" size="30"/><input type="submit" value="Submit"/>
      </form>

      <var name="myAttribute"><parameter name="myAttribute"/></var>
      <when var="myAttribute" exists="true">
        <attribute name="myAttribute" value="${myAttribute}"/>
      </when>
      <include article="example-output.he">
        <var name="example.index" value="4"/>
        <var name="example.message">Retrieving myAttribute</var>
        <var name="example.text"><![CDATA[
  &lt;article&gt;
    &lt;attribute name=&quot;myAttribute&quot;/&gt;
  &lt;/article&gt;]]></var>
        <var name="example.output"><attribute name="myAttribute"/></var>
      </include>
    </var>
  </include>
</article>
